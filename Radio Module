"""
Radio Module Example 
-----------------------------------------------------------

Purpose:
- Read three potentiometers and three buttons on a Raspberry Pi Pico.
- Periodically transmit all readings over UART to a central controller.


Typical Uses:
- Physical computing inputs
- Sending sensor/button state to another microcontroller
- Upstream conversion to MIDI or other protocols by a separate master device

- This file is provided as a general educational example. It is not derived from
  or representative of any proprietary or third-party project.

Author: Austin Zercher
Date: 2025
-----------------------------------------------------------
"""

import time
import digitalio
from analogio import AnalogIn
import busio
import board

uart = busio.UART(board.GP0, board.GP1, baudrate=9600)

# Set up buttons
backButton = digitalio.DigitalInOut(board.GP18)
backButton.direction = digitalio.Direction.INPUT
backButton.pull = digitalio.Pull.DOWN

pause = digitalio.DigitalInOut(board.GP19)
pause.direction = digitalio.Direction.INPUT
pause.pull = digitalio.Pull.DOWN

nextButton = digitalio.DigitalInOut(board.GP20)
nextButton.direction = digitalio.Direction.INPUT
nextButton.pull = digitalio.Pull.DOWN

buttons = [
    ("back", backButton),
    ("pause", pause),
    ("next", nextButton)
]

# Set up potentiometers
pot1 = AnalogIn(board.GP28)
pot2 = AnalogIn(board.GP27)
pot3 = AnalogIn(board.GP26)

values = [0, 0, 0]
timer = time.monotonic()
timer2 = time.monotonic()

# Main loop (unchanged logic)
while True:
    now = time.monotonic()

    values[0] = pot1.value
    values[1] = pot2.value
    values[2] = pot3.value

    if (now - timer >= 0.3):
        for i, v in enumerate(values):
            uart.write((f"Radio:Pot{i+1}:{v}\n").encode())

        for name, b in buttons:
            uart.write((f"Radio:{name}:{b.value}\n").encode())
            if b.value:
                print(name)
        timer = time.monotonic()

    if (now - timer2 >= 3):
        for i, v in enumerate(values):
            print(f"Pot {i+1}:{v}")
        timer2 = time.monotonic()
